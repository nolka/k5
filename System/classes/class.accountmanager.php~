<?php

class AccountManager extends BaseClass
{
    
    public function __construct()
    {
        parent::__construct();
    }
    
    public function GetAccountById($id)
    {
        $this->sql->Query("SELECT * FROM `accounts` WHERE `a_Id`=?d LIMIT 1", $id);
        if($this->sql->GetRowsCount() > 0)
        {
            $acc = $this->sql->Assoc();
            return new UserAccount($acc;
        }
        return null;
    }
    
    public function GetAccounts()
    {
        $this->sql->Query("SELECT * FROM `accounts`");
        $a = array();
        if($this->sql->GetRowsCount() > 0)
        {
            while($acc = $this->sql->Assoc())
                $a[] = new UserAccount($acc);
        }
        return $a;
    }

    public function AccountExists($filter)
    {
        if(func_num_args() == 1)
        {
            $this->sql->Query("SELECT * FROM `accounts` WHERE `a_Id`=?d", $filter);
        }
        else
        {
            $filter = func_get_args();
            $this->sql->Query("SELECT * FROM `accounts` WHERE ?=?", $filter[0], $filter[1]);
        }
        if($this->sql->GetRowsCount() > 0)
        return true;
        return false;
    }

    public function Register($account)
    {
        if(is_object($account))
        {
            $account = CommonUtils::ObjectToArray($account);
        }
        $account = CommonUtils::AddPrefix($account, 'a_');
        return $this->sql->Insert('accounts',$account)->GetLastId();
    }
}

?>
